{"ast":null,"code":"import * as xml2js from 'xml2js';\nconst DATA_URL = '/assets/czasopisma.xml';\nclass MagazinesDB {\n  constructor(http) {\n    this.http = http;\n    this.czasopisma = [];\n    this.get = () => this.czasopisma;\n    this.getWithoutPublications = () => this.czasopisma.map(czasopismo => new Magazie(czasopismo.name, czasopismo.thumbnail, czasopismo.years, []));\n    this.getNames = () => this.czasopisma.map(czasopismo => czasopismo.name);\n    this.getMagazine = name => this.czasopisma.find(czasopismo => czasopismo.name === name);\n    this.load = () => this.http.get(DATA_URL, {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rawCzasopisma = this.convertToJSON(data).czasopisma;\n      this.czasopisma = Object.entries(rawCzasopisma).reduce((acc, [name, value]) => {\n        if (name === 'zmienne' || name === 'lata') return acc;\n        const publications = Object.values(value).map(publication => new Publication(publication.nazwa, publication.numer, parseInt(publication.stron), publication.miniaturka, publication.format, publication.plik, publication.podeslal, publication.przetworzenie, publication.skan, publication.wydawca));\n        const czasopismo = new Magazie(name, rawCzasopisma.zmienne[name].src, rawCzasopisma.lata[name].split(',').map(year => parseInt(year.trim())), publications);\n        acc.push(czasopismo);\n        return acc;\n      }, []);\n    });\n    this.convertToJSON = xml => {\n      let res = null;\n      const parser = new xml2js.Parser({\n        explicitArray: false\n      });\n      parser.parseString(xml, (err, result) => res = result);\n      return res;\n    };\n    this.load();\n  }\n}\nclass Magazie {\n  constructor(name, thumbnail, years = [], publications) {\n    this.name = name;\n    this.thumbnail = thumbnail;\n    this.years = years;\n    this.publications = publications;\n  }\n}\nclass Publication {\n  constructor(name, number, pages, thumbnail, format, file, uploader, editor, scanner, publisher) {\n    this.name = name;\n    this.number = number;\n    this.pages = pages;\n    this.thumbnail = thumbnail;\n    this.format = format;\n    this.file = file;\n    this.uploader = uploader;\n    this.editor = editor;\n    this.scanner = scanner;\n    this.publisher = publisher;\n  }\n}\nexport { MagazinesDB, Magazie, Publication };","map":{"version":3,"names":["xml2js","DATA_URL","MagazinesDB","constructor","http","czasopisma","get","getWithoutPublications","map","czasopismo","Magazie","name","thumbnail","years","getNames","getMagazine","find","load","responseType","subscribe","data","rawCzasopisma","convertToJSON","Object","entries","reduce","acc","value","publications","values","publication","Publication","nazwa","numer","parseInt","stron","miniaturka","format","plik","podeslal","przetworzenie","skan","wydawca","zmienne","src","lata","split","year","trim","push","xml","res","parser","Parser","explicitArray","parseString","err","result","number","pages","file","uploader","editor","scanner","publisher"],"sources":["/home/nikodem/projects/school/src/app/helpers.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport * as xml2js from 'xml2js';\n\nconst DATA_URL = '/assets/czasopisma.xml';\n\nclass MagazinesDB {\n    public czasopisma: Magazie[] = [];\n\n    public get = () => this.czasopisma;\n    public getWithoutPublications = () => this.czasopisma\n        .map(czasopismo => new Magazie(\n            czasopismo.name,\n            czasopismo.thumbnail,\n            czasopismo.years,\n            []\n        ));\n    public getNames = () => this.czasopisma\n        .map(czasopismo => czasopismo.name);\n    public getMagazine = (name: string) => this.czasopisma\n        .find(czasopismo => czasopismo.name === name);\n\n\tconstructor(private http: HttpClient) {\n        this.load();\n    }\n\n    private load = () =>\n        this.http.get(DATA_URL, { responseType: 'text' })\n            .subscribe(data => {\n                const rawCzasopisma = this.convertToJSON(data).czasopisma\n\n                this.czasopisma = Object.entries(rawCzasopisma).reduce((acc, [name, value]) => {\n                    if (name === 'zmienne' || name === 'lata')\n                        return acc;\n\n                    const publications = Object.values(value as any[])\n                        .map(publication => new Publication(\n                            publication.nazwa,\n                            publication.numer,\n                            parseInt(publication.stron),\n\n                            publication.miniaturka,\n                            publication.format,\n                            publication.plik,\n\n                            publication.podeslal,\n                            publication.przetworzenie,\n                            publication.skan,\n                            publication.wydawca,\n                        ));\n                    const czasopismo = new Magazie(\n                        name,\n                        rawCzasopisma.zmienne[name].src,\n                        rawCzasopisma.lata[name].split(',')\n                            .map((year: string) => parseInt(year.trim())),\n                        publications\n                    )\n\n                    acc.push(czasopismo);\n                    return acc;\n                }, [] as Magazie[])\n            });\n\n    private convertToJSON = (xml: string) => {\n        let res: any = null\n\n        const parser = new xml2js.Parser({explicitArray: false});\n        parser.parseString(xml, (err, result) => res = result);\n\n        return res;\n    }\n}\n\nclass Magazie {\n    constructor(\n        public name: string,\n        public thumbnail: string,\n        public years: string[] = [],\n        public publications: Publication[]\n    ) {}\n}\n\nclass Publication {\n    constructor(\n        public name: string,\n        public number: string,\n        public pages: number,\n\n        public thumbnail: string,\n        public format: string,\n        public file: string,\n\n        public uploader: string,\n        public editor: string,\n        public scanner: string,\n        public publisher: string,\n    ) {}\n}\n\nexport { MagazinesDB, Magazie, Publication };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}