{"ast":null,"code":"import * as xml2js from 'xml2js';\nconst DATA_URL = 'https://mendela.pl/ap_kli/czasopisma.xml';\nclass Czasopisma {\n  constructor(http) {\n    this.http = http;\n    this.get = () => {\n      console.log(this.czasopisma);\n      return this.czasopisma;\n    };\n    this.load = () => this.http.get(DATA_URL, {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rawCzasopisma = this.convertToJSON(data).czasopisma;\n      this.czasopisma = Object.keys(rawCzasopisma).map(key => {\n        const czasopismo = rawCzasopisma[key];\n        return new Czasopismo(czasopismo.name);\n      });\n    });\n    this.convertToJSON = xml => {\n      let res = null;\n      const parser = new xml2js.Parser({\n        explicitArray: false\n      });\n      parser.parseString(xml, (err, result) => res = result);\n      return res;\n    };\n    this.load();\n  }\n}\nclass Czasopismo {\n  constructor(name) {\n    this.name = name;\n  }\n}\nexport { Czasopisma };","map":{"version":3,"names":["xml2js","DATA_URL","Czasopisma","constructor","http","get","console","log","czasopisma","load","responseType","subscribe","data","rawCzasopisma","convertToJSON","Object","keys","map","key","czasopismo","Czasopismo","name","xml","res","parser","Parser","explicitArray","parseString","err","result"],"sources":["/home/nikodem/projects/school/src/app/helpers.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport * as xml2js from 'xml2js';\n\nconst DATA_URL = 'https://mendela.pl/ap_kli/czasopisma.xml';\n\nclass Czasopisma {\n    public czasopisma: Czasopismo[];\n    public get = () => {\n        console.log(this.czasopisma);\n        return this.czasopisma;\n    }\n\n\tconstructor(private http: HttpClient) {\n        this.load();\n    }\n\n    private load = () =>\n        this.http.get(DATA_URL, { responseType: 'text' })\n            .subscribe(data => {\n                const rawCzasopisma = this.convertToJSON(data).czasopisma\n\n                this.czasopisma = Object.keys(rawCzasopisma).map(key => {\n                    const czasopismo = rawCzasopisma[key];\n                    return new Czasopismo(czasopismo.name);\n                })\n            });\n\n    private convertToJSON = (xml: string) => {\n        let res: any = null\n\n        const parser = new xml2js.Parser({explicitArray: false});\n        parser.parseString(xml, (err, result) => res = result);\n\n        return res;\n    }\n}\n\nclass Czasopismo {\n    constructor(public name: string) {\n\n    }\n}\n\nexport { Czasopisma };\n"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAEhC,MAAMC,QAAQ,GAAG,0CAA0C;AAE3D,MAAMC,UAAU;EAOfC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IALd,KAAAC,GAAG,GAAG,MAAK;MACdC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,UAAU,CAAC;MAC5B,OAAO,IAAI,CAACA,UAAU;IAC1B,CAAC;IAMO,KAAAC,IAAI,GAAG,MACX,IAAI,CAACL,IAAI,CAACC,GAAG,CAACJ,QAAQ,EAAE;MAAES,YAAY,EAAE;IAAM,CAAE,CAAC,CAC5CC,SAAS,CAACC,IAAI,IAAG;MACd,MAAMC,aAAa,GAAG,IAAI,CAACC,aAAa,CAACF,IAAI,CAAC,CAACJ,UAAU;MAEzD,IAAI,CAACA,UAAU,GAAGO,MAAM,CAACC,IAAI,CAACH,aAAa,CAAC,CAACI,GAAG,CAACC,GAAG,IAAG;QACnD,MAAMC,UAAU,GAAGN,aAAa,CAACK,GAAG,CAAC;QACrC,OAAO,IAAIE,UAAU,CAACD,UAAU,CAACE,IAAI,CAAC;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,KAAAP,aAAa,GAAIQ,GAAW,IAAI;MACpC,IAAIC,GAAG,GAAQ,IAAI;MAEnB,MAAMC,MAAM,GAAG,IAAIxB,MAAM,CAACyB,MAAM,CAAC;QAACC,aAAa,EAAE;MAAK,CAAC,CAAC;MACxDF,MAAM,CAACG,WAAW,CAACL,GAAG,EAAE,CAACM,GAAG,EAAEC,MAAM,KAAKN,GAAG,GAAGM,MAAM,CAAC;MAEtD,OAAON,GAAG;IACd,CAAC;IArBG,IAAI,CAACd,IAAI,EAAE;EACf;;AAuBJ,MAAMW,UAAU;EACZjB,YAAmBkB,IAAY;IAAZ,KAAAA,IAAI,GAAJA,IAAI;EAEvB;;AAGJ,SAASnB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}