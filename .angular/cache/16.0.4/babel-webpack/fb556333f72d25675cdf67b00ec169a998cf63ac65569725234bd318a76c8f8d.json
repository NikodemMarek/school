{"ast":null,"code":"import * as xml2js from 'xml2js';\nconst DATA_URL = '/assets/czasopisma.xml';\nconst MAGAZINE_ASSETS_URL = 'http://atarionline.pl/biblioteka/czasopisma/img/';\nconst PUBLICATION_ASSETS_URL = 'http://atarionline.pl/biblioteka/czasopisma/';\nclass MagazinesDB {\n  constructor(http) {\n    this.http = http;\n    this.czasopisma = [];\n    this.get = () => this.czasopisma;\n    this.getNames = () => this.czasopisma.map(czasopismo => czasopismo.name);\n    this.getMagazine = name => this.czasopisma.find(czasopismo => czasopismo.name === name);\n    this.load = () => this.http.get(DATA_URL, {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rawMagazines = this.convertToJSON(data).czasopisma;\n      this.czasopisma = Object.entries(rawMagazines).reduce((acc, [name, value]) => {\n        if (name === 'zmienne' || name === 'lata') return acc;\n        const publications = Object.values(value).map(publication => new Publication(publication.nazwa, publication.numer, parseInt(publication.stron), PUBLICATION_ASSETS_URL + '/' + name + '/' + publication.miniaturka, publication.format, publication.plik, publication.podeslal, publication.przetworzenie, publication.skan, publication.wydawca));\n        console.log(publications);\n        const czasopismo = new Magazine(name, MAGAZINE_ASSETS_URL + rawMagazines.zmienne[name].src, rawMagazines.lata[name].split(',').map(year => new Year(parseInt(year), publications.filter(publication => publication?.number?.startsWith(year)))));\n        acc.push(czasopismo);\n        return acc;\n      }, []);\n    });\n    this.convertToJSON = xml => {\n      let res = null;\n      const parser = new xml2js.Parser({\n        explicitArray: false\n      });\n      parser.parseString(xml, (err, result) => res = result);\n      return res;\n    };\n    this.load();\n  }\n}\nclass Magazine {\n  constructor(name, thumbnail, years) {\n    this.name = name;\n    this.thumbnail = thumbnail;\n    this.years = years;\n    this.getYears = () => this.years;\n  }\n}\nclass Year {\n  constructor(year, publications) {\n    this.year = year;\n    this.publications = publications;\n    this.getPublications = () => this.publications;\n  }\n}\nclass Publication {\n  constructor(name, number, pages, thumbnail, format, file, uploader, editor, scanner, publisher) {\n    this.name = name;\n    this.number = number;\n    this.pages = pages;\n    this.thumbnail = thumbnail;\n    this.format = format;\n    this.file = file;\n    this.uploader = uploader;\n    this.editor = editor;\n    this.scanner = scanner;\n    this.publisher = publisher;\n  }\n}\nexport { MagazinesDB, Magazine, Publication };","map":{"version":3,"names":["xml2js","DATA_URL","MAGAZINE_ASSETS_URL","PUBLICATION_ASSETS_URL","MagazinesDB","constructor","http","czasopisma","get","getNames","map","czasopismo","name","getMagazine","find","load","responseType","subscribe","data","rawMagazines","convertToJSON","Object","entries","reduce","acc","value","publications","values","publication","Publication","nazwa","numer","parseInt","stron","miniaturka","format","plik","podeslal","przetworzenie","skan","wydawca","console","log","Magazine","zmienne","src","lata","split","year","Year","filter","number","startsWith","push","xml","res","parser","Parser","explicitArray","parseString","err","result","thumbnail","years","getYears","getPublications","pages","file","uploader","editor","scanner","publisher"],"sources":["/home/nikodem/projects/school/src/app/helpers.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport * as xml2js from 'xml2js';\n\nconst DATA_URL = '/assets/czasopisma.xml';\n\nconst MAGAZINE_ASSETS_URL = 'http://atarionline.pl/biblioteka/czasopisma/img/'\nconst PUBLICATION_ASSETS_URL = 'http://atarionline.pl/biblioteka/czasopisma/'\n\nclass MagazinesDB {\n    public czasopisma: Magazine[] = [];\n\n    public get = () => this.czasopisma;\n    public getNames = () => this.czasopisma\n        .map(czasopismo => czasopismo.name);\n    public getMagazine = (name: string) => this.czasopisma\n        .find(czasopismo => czasopismo.name === name);\n\n\tconstructor(private http: HttpClient) {\n        this.load();\n    }\n\n    private load = () =>\n        this.http.get(DATA_URL, { responseType: 'text' })\n            .subscribe(data => {\n                const rawMagazines = this.convertToJSON(data).czasopisma\n\n                this.czasopisma = Object.entries(rawMagazines).reduce((acc, [name, value]) => {\n                    if (name === 'zmienne' || name === 'lata')\n                        return acc;\n\n\n                    const publications = Object.values(value as any[])\n                        .map(publication => new Publication(\n                            publication.nazwa,\n                            publication.numer,\n                            parseInt(publication.stron),\n\n                            PUBLICATION_ASSETS_URL + '/' + name + '/' + publication.miniaturka,\n                            publication.format,\n                            publication.plik,\n\n                            publication.podeslal,\n                            publication.przetworzenie,\n                            publication.skan,\n                            publication.wydawca,\n                        ));\n                        console.log(publications);\n                    const czasopismo = new Magazine(\n                        name,\n                        MAGAZINE_ASSETS_URL + rawMagazines.zmienne[name].src,\n                        rawMagazines.lata[name].split(',')\n                            .map((year: string) => new Year(\n                                parseInt(year),\n                                publications.filter(publication => publication?.number?.startsWith(year))\n                            )),\n                    )\n\n                    acc.push(czasopismo);\n                    return acc;\n                }, [] as Magazine[])\n            });\n\n    private convertToJSON = (xml: string) => {\n        let res: any = null\n\n        const parser = new xml2js.Parser({explicitArray: false});\n        parser.parseString(xml, (err, result) => res = result);\n\n        return res;\n    }\n}\n\nclass Magazine {\n    constructor(\n        public name: string,\n        public thumbnail: string,\n        public years: Year[],\n    ) {}\n\n    public getYears = () => this.years;\n}\n\nclass Year {\n    constructor(\n        public year: number,\n        public publications: Publication[],\n    ) {}\n\n    public getPublications = () => this.publications;\n}\n\nclass Publication {\n    constructor(\n        public name: string,\n        public number: string,\n        public pages: number,\n\n        public thumbnail: string,\n        public format: string,\n        public file: string,\n\n        public uploader: string,\n        public editor: string,\n        public scanner: string,\n        public publisher: string,\n    ) {}\n}\n\nexport { MagazinesDB, Magazine, Publication };\n"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAEhC,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,MAAMC,mBAAmB,GAAG,kDAAkD;AAC9E,MAAMC,sBAAsB,GAAG,8CAA8C;AAE7E,MAAMC,WAAW;EAShBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARd,KAAAC,UAAU,GAAe,EAAE;IAE3B,KAAAC,GAAG,GAAG,MAAM,IAAI,CAACD,UAAU;IAC3B,KAAAE,QAAQ,GAAG,MAAM,IAAI,CAACF,UAAU,CAClCG,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACC,IAAI,CAAC;IAChC,KAAAC,WAAW,GAAID,IAAY,IAAK,IAAI,CAACL,UAAU,CACjDO,IAAI,CAACH,UAAU,IAAIA,UAAU,CAACC,IAAI,KAAKA,IAAI,CAAC;IAMzC,KAAAG,IAAI,GAAG,MACX,IAAI,CAACT,IAAI,CAACE,GAAG,CAACP,QAAQ,EAAE;MAAEe,YAAY,EAAE;IAAM,CAAE,CAAC,CAC5CC,SAAS,CAACC,IAAI,IAAG;MACd,MAAMC,YAAY,GAAG,IAAI,CAACC,aAAa,CAACF,IAAI,CAAC,CAACX,UAAU;MAExD,IAAI,CAACA,UAAU,GAAGc,MAAM,CAACC,OAAO,CAACH,YAAY,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAE,CAACZ,IAAI,EAAEa,KAAK,CAAC,KAAI;QACzE,IAAIb,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,MAAM,EACrC,OAAOY,GAAG;QAGd,MAAME,YAAY,GAAGL,MAAM,CAACM,MAAM,CAACF,KAAc,CAAC,CAC7Cf,GAAG,CAACkB,WAAW,IAAI,IAAIC,WAAW,CAC/BD,WAAW,CAACE,KAAK,EACjBF,WAAW,CAACG,KAAK,EACjBC,QAAQ,CAACJ,WAAW,CAACK,KAAK,CAAC,EAE3B9B,sBAAsB,GAAG,GAAG,GAAGS,IAAI,GAAG,GAAG,GAAGgB,WAAW,CAACM,UAAU,EAClEN,WAAW,CAACO,MAAM,EAClBP,WAAW,CAACQ,IAAI,EAEhBR,WAAW,CAACS,QAAQ,EACpBT,WAAW,CAACU,aAAa,EACzBV,WAAW,CAACW,IAAI,EAChBX,WAAW,CAACY,OAAO,CACtB,CAAC;QACFC,OAAO,CAACC,GAAG,CAAChB,YAAY,CAAC;QAC7B,MAAMf,UAAU,GAAG,IAAIgC,QAAQ,CAC3B/B,IAAI,EACJV,mBAAmB,GAAGiB,YAAY,CAACyB,OAAO,CAAChC,IAAI,CAAC,CAACiC,GAAG,EACpD1B,YAAY,CAAC2B,IAAI,CAAClC,IAAI,CAAC,CAACmC,KAAK,CAAC,GAAG,CAAC,CAC7BrC,GAAG,CAAEsC,IAAY,IAAK,IAAIC,IAAI,CAC3BjB,QAAQ,CAACgB,IAAI,CAAC,EACdtB,YAAY,CAACwB,MAAM,CAACtB,WAAW,IAAIA,WAAW,EAAEuB,MAAM,EAAEC,UAAU,CAACJ,IAAI,CAAC,CAAC,CAC5E,CAAC,CACT;QAEDxB,GAAG,CAAC6B,IAAI,CAAC1C,UAAU,CAAC;QACpB,OAAOa,GAAG;MACd,CAAC,EAAE,EAAgB,CAAC;IACxB,CAAC,CAAC;IAEF,KAAAJ,aAAa,GAAIkC,GAAW,IAAI;MACpC,IAAIC,GAAG,GAAQ,IAAI;MAEnB,MAAMC,MAAM,GAAG,IAAIxD,MAAM,CAACyD,MAAM,CAAC;QAACC,aAAa,EAAE;MAAK,CAAC,CAAC;MACxDF,MAAM,CAACG,WAAW,CAACL,GAAG,EAAE,CAACM,GAAG,EAAEC,MAAM,KAAKN,GAAG,GAAGM,MAAM,CAAC;MAEtD,OAAON,GAAG;IACd,CAAC;IAnDG,IAAI,CAACxC,IAAI,EAAE;EACf;;AAqDJ,MAAM4B,QAAQ;EACVtC,YACWO,IAAY,EACZkD,SAAiB,EACjBC,KAAa;IAFb,KAAAnD,IAAI,GAAJA,IAAI;IACJ,KAAAkD,SAAS,GAATA,SAAS;IACT,KAAAC,KAAK,GAALA,KAAK;IAGT,KAAAC,QAAQ,GAAG,MAAM,IAAI,CAACD,KAAK;EAF/B;;AAKP,MAAMd,IAAI;EACN5C,YACW2C,IAAY,EACZtB,YAA2B;IAD3B,KAAAsB,IAAI,GAAJA,IAAI;IACJ,KAAAtB,YAAY,GAAZA,YAAY;IAGhB,KAAAuC,eAAe,GAAG,MAAM,IAAI,CAACvC,YAAY;EAF7C;;AAKP,MAAMG,WAAW;EACbxB,YACWO,IAAY,EACZuC,MAAc,EACde,KAAa,EAEbJ,SAAiB,EACjB3B,MAAc,EACdgC,IAAY,EAEZC,QAAgB,EAChBC,MAAc,EACdC,OAAe,EACfC,SAAiB;IAXjB,KAAA3D,IAAI,GAAJA,IAAI;IACJ,KAAAuC,MAAM,GAANA,MAAM;IACN,KAAAe,KAAK,GAALA,KAAK;IAEL,KAAAJ,SAAS,GAATA,SAAS;IACT,KAAA3B,MAAM,GAANA,MAAM;IACN,KAAAgC,IAAI,GAAJA,IAAI;IAEJ,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,SAAS,GAATA,SAAS;EACjB;;AAGP,SAASnE,WAAW,EAAEuC,QAAQ,EAAEd,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}