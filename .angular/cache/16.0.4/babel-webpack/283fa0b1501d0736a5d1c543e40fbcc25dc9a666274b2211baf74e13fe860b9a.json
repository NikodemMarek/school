{"ast":null,"code":"import * as xml2js from 'xml2js';\nconst DATA_URL = '/assets/czasopisma.xml';\nclass Czasopisma {\n  constructor(http) {\n    this.http = http;\n    this.czasopisma = [];\n    this.query = ({\n      name\n    } = {}) => this.czasopisma.filter(czasopismo => name ? czasopismo.name === name : true);\n    this.load = () => this.http.get(DATA_URL, {\n      responseType: 'text'\n    }).subscribe(data => {\n      const rawCzasopisma = this.convertToJSON(data).czasopisma;\n      this.czasopisma = Object.entries(rawCzasopisma).reduce((acc, [name, value]) => {\n        if (name === 'zmienne' || name === 'lata') return acc;\n        console.log(value);\n        const publications = Object.values(value).map({\n          nazwa,\n          numer,\n          stron,\n          miniaturka,\n          format,\n          plik,\n          podeslal,\n          przetworzenie,\n          skan,\n          wydawca\n        });\n        {\n          return new Publication(nazwa, numer, stron, miniaturka, format, plik, podeslal, przetworzenie, skan, wydawca);\n        }\n      });\n      console.log(publications);\n      const czasopismo = new Czasopismo(name, publications);\n      acc.push(czasopismo);\n      return acc;\n    }, []);\n    this.load();\n  }\n}\n;\nconvertToJSON = xml => {\n  let res = null;\n  const parser = new xml2js.Parser({\n    explicitArray: false\n  });\n  parser.parseString(xml, (err, result) => res = result);\n  return res;\n};\nclass Czasopismo {\n  constructor(name, publications) {\n    this.name = name;\n    this.publications = publications;\n  }\n}\nclass Publication {\n  constructor(name, number, pages, thumbnail, format, file, uploader, editor, scanner, publisher) {}\n}\nexport { Czasopisma };","map":{"version":3,"names":["xml2js","DATA_URL","Czasopisma","constructor","http","czasopisma","query","name","filter","czasopismo","load","get","responseType","subscribe","data","rawCzasopisma","convertToJSON","Object","entries","reduce","acc","value","console","log","publications","values","map","nazwa","numer","stron","miniaturka","format","plik","podeslal","przetworzenie","skan","wydawca","Publication","Czasopismo","push","xml","res","parser","Parser","explicitArray","parseString","err","result","number","pages","thumbnail","file","uploader","editor","scanner","publisher"],"sources":["/home/nikodem/projects/school/src/app/helpers.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport * as xml2js from 'xml2js';\n\nconst DATA_URL = '/assets/czasopisma.xml';\n\nclass Czasopisma {\n    public czasopisma: Czasopismo[] = [];\n    public query = ({\n        name\n    }: {\n        name?: string\n    } = {}) => this.czasopisma\n        .filter(czasopismo => (\n            name? czasopismo.name === name: true\n        ));\n\n\tconstructor(private http: HttpClient) {\n        this.load();\n    }\n\n    private load = () =>\n        this.http.get(DATA_URL, { responseType: 'text' })\n            .subscribe(data => {\n                const rawCzasopisma = this.convertToJSON(data).czasopisma\n\n                this.czasopisma = Object.entries(rawCzasopisma).reduce((acc, [name, value]) => {\n                    if (name === 'zmienne' || name === 'lata')\n                        return acc;\n\n                    console.log(value);\n                    const publications = Object.values(value as any[])\n                        .map({nazwa, numer, stron, miniaturka, format, plik, podeslal, przetworzenie, skan, wydawca} => {\n                            return new Publication(\n                                nazwa,\n                                numer,\n                                stron,\n\n                                miniaturka,\n                                format,\n                                plik,\n\n                                podeslal,\n                                przetworzenie,\n                                skan,\n                                wydawca,\n                            );\n                        });\n                    console.log(publications);\n                    const czasopismo = new Czasopismo(name, publications)\n                    acc.push(czasopismo);\n                    return acc;\n                }, [] as Czasopismo[])\n            });\n\n    private convertToJSON = (xml: string) => {\n        let res: any = null\n\n        const parser = new xml2js.Parser({explicitArray: false});\n        parser.parseString(xml, (err, result) => res = result);\n\n        return res;\n    }\n}\n\nclass Czasopismo {\n    constructor(public name: string, public publications: Publication[]) {}\n}\n\nclass Publication {\n    constructor(\n        name: string,\n        number: string,\n        pages: string,\n\n        thumbnail: string,\n        format: string,\n        file: string,\n\n        uploader: string,\n        editor: string,\n        scanner: string,\n        publisher: string,\n    ) {}\n}\n\nexport { Czasopisma };\n"],"mappings":"AACA,OAAO,KAAKA,MAAM,MAAM,QAAQ;AAEhC,MAAMC,QAAQ,GAAG,wBAAwB;AAEzC,MAAMC,UAAU;EAWfC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAVd,KAAAC,UAAU,GAAiB,EAAE;IAC7B,KAAAC,KAAK,GAAG,CAAC;MACZC;IAAI,IAGJ,EAAE,KAAK,IAAI,CAACF,UAAU,CACrBG,MAAM,CAACC,UAAU,IACdF,IAAI,GAAEE,UAAU,CAACF,IAAI,KAAKA,IAAI,GAAE,IACnC,CAAC;IAME,KAAAG,IAAI,GAAG,MACX,IAAI,CAACN,IAAI,CAACO,GAAG,CAACV,QAAQ,EAAE;MAAEW,YAAY,EAAE;IAAM,CAAE,CAAC,CAC5CC,SAAS,CAACC,IAAI,IAAG;MACd,MAAMC,aAAa,GAAG,IAAI,CAACC,aAAa,CAACF,IAAI,CAAC,CAACT,UAAU;MAEzD,IAAI,CAACA,UAAU,GAAGY,MAAM,CAACC,OAAO,CAACH,aAAa,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAE,CAACb,IAAI,EAAEc,KAAK,CAAC,KAAI;QAC1E,IAAId,IAAI,KAAK,SAAS,IAAIA,IAAI,KAAK,MAAM,EACrC,OAAOa,GAAG;QAEdE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;QAClB,MAAMG,YAAY,GAAGP,MAAM,CAACQ,MAAM,CAACJ,KAAc,CAAC,CAC7CK,GAAG,CAAC;UAACC,KAAK;UAAEC,KAAK;UAAEC,KAAK;UAAEC,UAAU;UAAEC,MAAM;UAAEC,IAAI;UAAEC,QAAQ;UAAEC,aAAa;UAAEC,IAAI;UAAEC;QAAO,CAAC;QAAI;UAC5F,OAAO,IAAIC,WAAW,CAClBV,KAAK,EACLC,KAAK,EACLC,KAAK,EAELC,UAAU,EACVC,MAAM,EACNC,IAAI,EAEJC,QAAQ,EACRC,aAAa,EACbC,IAAI,EACJC,OAAO,CACV;;MACJ,CAAC;MACNd,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;MACzB,MAAMf,UAAU,GAAG,IAAI6B,UAAU,CAAC/B,IAAI,EAAEiB,YAAY,CAAC;MACrDJ,GAAG,CAACmB,IAAI,CAAC9B,UAAU,CAAC;MACpB,OAAOW,GAAG;IACd,CAAC,EAAE,EAAkB,CAAC;IAlC9B,IAAI,CAACV,IAAI,EAAE;EACf;;AAkCU;AAEFM,aAAa,GAAIwB,GAAW,IAAI;EACpC,IAAIC,GAAG,GAAQ,IAAI;EAEnB,MAAMC,MAAM,GAAG,IAAI1C,MAAM,CAAC2C,MAAM,CAAC;IAACC,aAAa,EAAE;EAAK,CAAC,CAAC;EACxDF,MAAM,CAACG,WAAW,CAACL,GAAG,EAAE,CAACM,GAAG,EAAEC,MAAM,KAAKN,GAAG,GAAGM,MAAM,CAAC;EAEtD,OAAON,GAAG;AACd,CAAC;AAGL,MAAMH,UAAU;EACZnC,YAAmBI,IAAY,EAASiB,YAA2B;IAAhD,KAAAjB,IAAI,GAAJA,IAAI;IAAiB,KAAAiB,YAAY,GAAZA,YAAY;EAAkB;;AAG1E,MAAMa,WAAW;EACblC,YACII,IAAY,EACZyC,MAAc,EACdC,KAAa,EAEbC,SAAiB,EACjBnB,MAAc,EACdoB,IAAY,EAEZC,QAAgB,EAChBC,MAAc,EACdC,OAAe,EACfC,SAAiB,GAClB;;AAGP,SAASrD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}