{"ast":null,"code":"import { Mark } from './../types';\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./tile.component\";\nfunction GameBoardComponent_tr_1_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 2)(1, \"app-game-tile\", 3);\n    i0.ɵɵlistener(\"click\", function GameBoardComponent_tr_1_td_1_Template_app_game_tile_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const x_r5 = restoredCtx.index;\n      const y_r2 = i0.ɵɵnextContext().index;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.setMark(x_r5, y_r2));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const mark_r4 = ctx.$implicit;\n    const x_r5 = ctx.index;\n    const y_r2 = i0.ɵɵnextContext().index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", ctx_r3.bgClass(x_r5, y_r2));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", mark_r4);\n  }\n}\nfunction GameBoardComponent_tr_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵtemplate(1, GameBoardComponent_tr_1_td_1_Template, 2, 2, \"td\", 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", row_r1);\n  }\n}\nexport class GameBoardComponent {\n  constructor() {\n    this.board = [];\n    this.setMarkEvent = new EventEmitter();\n    this.setMark = (x, y) => this.setMarkEvent.emit({\n      x,\n      y\n    });\n    this.bgClass = (x, y) => {\n      if (this.board[y][x] !== Mark.None) return {};\n      if ((x + y) % 2 === 0) return {\n        backgroundColor: \"#ECEFF4\"\n      };else return {\n        backgroundColor: \"#D8DEE9\"\n      };\n    };\n  }\n}\nGameBoardComponent.ɵfac = function GameBoardComponent_Factory(t) {\n  return new (t || GameBoardComponent)();\n};\nGameBoardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameBoardComponent,\n  selectors: [[\"app-game-board\"]],\n  inputs: {\n    board: \"board\"\n  },\n  outputs: {\n    setMarkEvent: \"setMarkEvent\"\n  },\n  decls: 2,\n  vars: 1,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngStyle\"], [3, \"value\", \"click\"]],\n  template: function GameBoardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"table\");\n      i0.ɵɵtemplate(1, GameBoardComponent_tr_1_Template, 2, 1, \"tr\", 0);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.board);\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgStyle, i2.GameTileComponent],\n  styles: [\"[_nghost-%COMP%] {\\n  overflow: auto;\\n  padding: 1rem;\\n  box-sizing: border-box;\\n  width: 100%;\\n  display: flex;\\n  justify-content: center;\\n  background-color: #3B4252;\\n}\\n\\n[_nghost-%COMP%]   table[_ngcontent-%COMP%] {\\n  border-collapse: collapse;\\n  table-layout: fixed;\\n}\\n\\n[_nghost-%COMP%]   table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  aspect-ratio: 1;\\n  width: 100px;\\n  border: none;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9ib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0k7RUFDRSxjQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBRUEsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUVBLHlCQUFBO0FBRk47O0FBS0k7RUFDRSx5QkFBQTtFQUNBLG1CQUFBO0FBRk47O0FBS0k7RUFDRSxlQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUFGTiIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIDpob3N0IHtcbiAgICAgIG92ZXJmbG93OiBhdXRvO1xuICAgICAgcGFkZGluZzogMXJlbTtcbiAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0I0MjUyO1xuICAgIH1cblxuICAgIDpob3N0IHRhYmxlIHtcbiAgICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gICAgICB0YWJsZS1sYXlvdXQ6IGZpeGVkO1xuICAgIH1cblxuICAgIDpob3N0IHRhYmxlIHRkIHtcbiAgICAgIGFzcGVjdC1yYXRpbzogMTtcbiAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICB9XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,QAAQ,YAAY;AACjC,SAAoBC,YAAY,QAAuB,eAAe;;;;;;;IAO9DC,EAAA,CAAAC,cAAA,YAAsE;IAGlED,EAAA,CAAAE,UAAA,mBAAAC,qEAAA;MAAA,MAAAC,WAAA,GAAAJ,EAAA,CAAAK,aAAA,CAAAC,GAAA;MAAA,MAAAC,IAAA,GAAAH,WAAA,CAAAI,KAAA;MAAA,MAAAC,IAAA,GAAAT,EAAA,CAAAU,aAAA,GAAAF,KAAA;MAAA,MAAAG,MAAA,GAAAX,EAAA,CAAAU,aAAA;MAAA,OAASV,EAAA,CAAAY,WAAA,CAAAD,MAAA,CAAAE,OAAA,CAAAN,IAAA,EAAAE,IAAA,CAAa;IAAA,EAAC;IACtBT,EAAA,CAAAc,YAAA,EAAgB;;;;;;;IAJuBd,EAAA,CAAAe,UAAA,YAAAC,MAAA,CAAAC,OAAA,CAAAV,IAAA,EAAAE,IAAA,EAAyB;IAEjET,EAAA,CAAAkB,SAAA,GAAc;IAAdlB,EAAA,CAAAe,UAAA,UAAAI,OAAA,CAAc;;;;;IAHpBnB,EAAA,CAAAC,cAAA,SAA6C;IAC3CD,EAAA,CAAAoB,UAAA,IAAAC,qCAAA,gBAKK;IACPrB,EAAA,CAAAc,YAAA,EAAK;;;;IANkBd,EAAA,CAAAkB,SAAA,GAAQ;IAARlB,EAAA,CAAAe,UAAA,YAAAO,MAAA,CAAQ;;;AAkCrC,OAAM,MAAOC,kBAAkB;EAvC/BC,YAAA;IAwCW,KAAAC,KAAK,GAAuB,EAAE;IAE7B,KAAAC,YAAY,GAAG,IAAI3B,YAAY,EAA4B;IACrE,KAAAc,OAAO,GAAG,CAACc,CAAS,EAAEC,CAAS,KAAK,IAAI,CAACF,YAAY,CAACG,IAAI,CAAC;MAAEF,CAAC;MAAEC;IAAC,CAAE,CAAC;IAE1D,KAAAX,OAAO,GAAG,CAACU,CAAS,EAAEC,CAAS,KAAI;MAC3C,IAAI,IAAI,CAACH,KAAK,CAACG,CAAC,CAAC,CAACD,CAAC,CAAC,KAAK7B,IAAI,CAACgC,IAAI,EAChC,OAAO,EAAE;MAEX,IAAI,CAACH,CAAC,GAAGC,CAAC,IAAI,CAAC,KAAK,CAAC,EACnB,OAAO;QAAEG,eAAe,EAAE;MAAS,CAAE,MAErC,OAAO;QAAEA,eAAe,EAAE;MAAS,CAAE;IACzC,CAAC;;;AAdUR,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAS,SAAA;EAAAC,MAAA;IAAAR,KAAA;EAAA;EAAAS,OAAA;IAAAR,YAAA;EAAA;EAAAS,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MApC3BxC,EAAA,CAAAC,cAAA,YAAO;MACLD,EAAA,CAAAoB,UAAA,IAAAsB,gCAAA,gBAOK;MACP1C,EAAA,CAAAc,YAAA,EAAQ;;;MARcd,EAAA,CAAAkB,SAAA,GAAU;MAAVlB,EAAA,CAAAe,UAAA,YAAA0B,GAAA,CAAAhB,KAAA,CAAU","names":["Mark","EventEmitter","i0","ɵɵelementStart","ɵɵlistener","GameBoardComponent_tr_1_td_1_Template_app_game_tile_click_1_listener","restoredCtx","ɵɵrestoreView","_r7","x_r5","index","y_r2","ɵɵnextContext","ctx_r6","ɵɵresetView","setMark","ɵɵelementEnd","ɵɵproperty","ctx_r3","bgClass","ɵɵadvance","mark_r4","ɵɵtemplate","GameBoardComponent_tr_1_td_1_Template","row_r1","GameBoardComponent","constructor","board","setMarkEvent","x","y","emit","None","backgroundColor","selectors","inputs","outputs","decls","vars","consts","template","GameBoardComponent_Template","rf","ctx","GameBoardComponent_tr_1_Template"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/board.component.ts"],"sourcesContent":["import { Mark } from './../types';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-game-board',\n  template: `\n    <table>\n      <tr *ngFor=\"let row of board; let y = index\">\n        <td *ngFor=\"let mark of row; let x = index\" [ngStyle]=\"bgClass(x, y)\">\n          <app-game-tile\n            [value]=\"mark\"\n            (click)=\"setMark(x, y)\"\n            ></app-game-tile>\n        </td>\n      </tr>\n    </table>\n  `,\n  styles: [`\n    :host {\n      overflow: auto;\n      padding: 1rem;\n      box-sizing: border-box;\n\n      width: 100%;\n      display: flex;\n      justify-content: center;\n\n      background-color: #3B4252;\n    }\n\n    :host table {\n      border-collapse: collapse;\n      table-layout: fixed;\n    }\n\n    :host table td {\n      aspect-ratio: 1;\n      width: 100px;\n      border: none;\n    }\n  `],\n})\nexport class GameBoardComponent {\n  @Input() board: Array<Array<Mark>> = [];\n\n  @Output() setMarkEvent = new EventEmitter<{ x: number, y: number }>();\n  setMark = (x: number, y: number) => this.setMarkEvent.emit({ x, y });\n\n  protected bgClass = (x: number, y: number) => {\n    if (this.board[y][x] !== Mark.None)\n      return {}\n\n    if ((x + y) % 2 === 0)\n      return { backgroundColor: \"#ECEFF4\" }\n    else\n      return { backgroundColor: \"#D8DEE9\" }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}