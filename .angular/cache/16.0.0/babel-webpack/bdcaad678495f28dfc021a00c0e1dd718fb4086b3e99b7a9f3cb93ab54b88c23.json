{"ast":null,"code":"import { Mark } from \"./types\";\nexport class Opponent {\n  constructor(size) {\n    this.size = size;\n    this.lastAttack = null;\n    this.makeMove = (board, lastMove) => {\n      const moves = this.getMoves(board);\n      return moves[Math.floor(Math.random() * moves.length)];\n    };\n    this.getMoves = board => {\n      const moves = [];\n      for (let y = 0; y < board.length; y++) {\n        const row = board[y];\n        for (let x = 0; x < row.length; x++) {\n          if (board[y][x] === Mark.None) moves.push({\n            x,\n            y\n          });\n        }\n      }\n      return moves;\n    };\n    this.shouldIBeAlamed = (board, x, y) => {\n      const danger = [[{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 2\n      }], [{\n        x: 0,\n        y: 1\n      }, {\n        x: 0,\n        y: 2\n      }], [{\n        x: -1,\n        y: 1\n      }, {\n        x: -2,\n        y: 2\n      }], [{\n        x: -1,\n        y: 0\n      }, {\n        x: -2,\n        y: 0\n      }], [{\n        x: -1,\n        y: -1\n      }, {\n        x: -2,\n        y: -2\n      }], [{\n        x: 0,\n        y: -1\n      }, {\n        x: 0,\n        y: -2\n      }], [{\n        x: 1,\n        y: -1\n      }, {\n        x: 2,\n        y: -2\n      }], [{\n        x: 1,\n        y: 0\n      }, {\n        x: 2,\n        y: 0\n      }]];\n      for (const direction of danger) {\n        if (board[y + direction[0].y]?.[x + direction[0].x] === Mark.X && board[y + direction[1].y]?.[x + direction[1].x] === Mark.X) return;\n        board[y + direction[0].y]?.[x + direction[0].x] === Mark.None ? {\n          x: x + direction[0].x * 3,\n          y: y + direction[0].y * 3\n        } : {\n          x: x + direction[1].x * 3,\n          y: y + direction[1].y * 3\n        };\n      }\n    };\n  }\n}","map":{"version":3,"mappings":"AAAA,SAASA,IAAI,QAAQ,SAAS;AAE9B,OAAM,MAAOC,QAAQ;EAGnBC,YAAoBC,IAA8B;IAA9B,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,UAAU,GAAoC,IAAI;IAI1D,KAAAC,QAAQ,GAAG,CAACC,KAAe,EAAEC,QAAkC,KAA8B;MAC3F,MAAMC,KAAK,GAAG,IAAI,CAACC,QAAQ,CAACH,KAAK,CAAC;MAElC,OAAOE,KAAK,CAACE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAAC;IACxD,CAAC;IAEO,KAAAJ,QAAQ,GAAIH,KAAe,IAAgC;MACjE,MAAME,KAAK,GAA+B,EAAE;MAE5C,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACO,MAAM,EAAEC,CAAC,EAAE,EAAE;QACrC,MAAMC,GAAG,GAAGT,KAAK,CAACQ,CAAC,CAAC;QACpB,KAAK,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACF,MAAM,EAAEG,CAAC,EAAE,EAAE;UACnC,IAAIV,KAAK,CAACQ,CAAC,CAAC,CAACE,CAAC,CAAC,KAAKhB,IAAI,CAACiB,IAAI,EAAET,KAAK,CAACU,IAAI,CAAC;YAAEF,CAAC;YAAEF;UAAC,CAAE,CAAC;;;MAIvD,OAAON,KAAK;IACd,CAAC;IAEO,KAAAW,eAAe,GAAG,CAACb,KAAe,EAAEU,CAAS,EAAEF,CAAS,KAAqC;MACnG,MAAMM,MAAM,GAAG,CACb,CACE;QAAEJ,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,EACd;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,CACf,EACD,CACE;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,EACd;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,CACf,EACD,CACE;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,EACf;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,CAChB,EACD,CACE;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,EACf;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,CAChB,EACD,CACE;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,EAChB;QAAEE,CAAC,EAAE,CAAC,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,CACjB,EACD,CACE;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,EACf;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,CAChB,EACD,CACE;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,EACf;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE,CAAC;MAAC,CAAE,CAChB,EACD,CACE;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,EACd;QAAEE,CAAC,EAAE,CAAC;QAAEF,CAAC,EAAE;MAAC,CAAE,CACf,CACF;MAED,KAAK,MAAMO,SAAS,IAAID,MAAM,EAAE;QAC9B,IACEd,KAAK,CAACQ,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC,CAACP,CAAC,CAAC,GAAGE,CAAC,GAAGK,SAAS,CAAC,CAAC,CAAC,CAACL,CAAC,CAAC,KAAKhB,IAAI,CAACsB,CAAC,IACvDhB,KAAK,CAACQ,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC,CAACP,CAAC,CAAC,GAAGE,CAAC,GAAGK,SAAS,CAAC,CAAC,CAAC,CAACL,CAAC,CAAC,KAAKhB,IAAI,CAACsB,CAAC,EAC7D;QACAhB,KAAK,CAACQ,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC,CAACP,CAAC,CAAC,GAAGE,CAAC,GAAGK,SAAS,CAAC,CAAC,CAAC,CAACL,CAAC,CAAC,KAAKhB,IAAI,CAACiB,IAAI,GACzD;UACAD,CAAC,EAAEA,CAAC,GAAGK,SAAS,CAAC,CAAC,CAAC,CAACL,CAAC,GAAG,CAAC;UACzBF,CAAC,EAAEA,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC,CAACP,CAAC,GAAG;SACzB,GACC;UACAE,CAAC,EAAEA,CAAC,GAAGK,SAAS,CAAC,CAAC,CAAC,CAACL,CAAC,GAAG,CAAC;UACzBF,CAAC,EAAEA,CAAC,GAAGO,SAAS,CAAC,CAAC,CAAC,CAACP,CAAC,GAAG;SACzB;;IAET,CAAC;EAxEoD","names":["Mark","Opponent","constructor","size","lastAttack","makeMove","board","lastMove","moves","getMoves","Math","floor","random","length","y","row","x","None","push","shouldIBeAlamed","danger","direction","X"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/opponentai.ts"],"sourcesContent":["import { Mark } from \"./types\";\n\nexport class Opponent {\n  private lastAttack: { x: number, y: number } | null = null;\n\n  constructor(private size: { x: number, y: number }) {}\n\n  makeMove = (board: Mark[][], lastMove: { x: number, y: number }): { x: number, y: number } => {\n    const moves = this.getMoves(board);\n\n    return moves[Math.floor(Math.random() * moves.length)];\n  }\n\n  private getMoves = (board: Mark[][]): { x: number, y: number }[] => {\n    const moves: { x: number, y: number }[] = [];\n\n    for (let y = 0; y < board.length; y++) {\n      const row = board[y];\n      for (let x = 0; x < row.length; x++) {\n        if (board[y][x] === Mark.None) moves.push({ x, y });\n      }\n    }\n\n    return moves;\n  }\n\n  private shouldIBeAlamed = (board: Mark[][], x: number, y: number): { x: number, y: number } | null => {\n    const danger = [\n      [\n        { x: 1, y: 1 },\n        { x: 2, y: 2 },\n      ],\n      [\n        { x: 0, y: 1 },\n        { x: 0, y: 2 },\n      ],\n      [\n        { x: -1, y: 1 },\n        { x: -2, y: 2 },\n      ],\n      [\n        { x: -1, y: 0 },\n        { x: -2, y: 0 },\n      ],\n      [\n        { x: -1, y: -1 },\n        { x: -2, y: -2 },\n      ],\n      [\n        { x: 0, y: -1 },\n        { x: 0, y: -2 },\n      ],\n      [\n        { x: 1, y: -1 },\n        { x: 2, y: -2 },\n      ],\n      [\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n      ],\n    ];\n\n    for (const direction of danger) {\n      if (\n        board[y + direction[0].y]?.[x + direction[0].x] === Mark.X\n        && board[y + direction[1].y]?.[x + direction[1].x] === Mark.X\n      ) return\n        board[y + direction[0].y]?.[x + direction[0].x] === Mark.None\n          ? {\n            x: x + direction[0].x * 3,\n            y: y + direction[0].y * 3,\n          }\n          : {\n            x: x + direction[1].x * 3,\n            y: y + direction[1].y * 3,\n          };\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}