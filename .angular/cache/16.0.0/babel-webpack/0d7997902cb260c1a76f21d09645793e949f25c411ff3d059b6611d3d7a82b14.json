{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nimport { Mark } from '../types';\nlet GameComponent = class GameComponent {\n  constructor() {\n    this.gameOver = false;\n    this.won = 0;\n    this.x = 5;\n    this.y = 5;\n    this.board = [];\n    this.restart = () => location.reload();\n    this.nextMark = Mark.O;\n    this.setMark = (x, y) => {\n      if (this.board[y][x] !== Mark.None) return;\n      this.board[y][x] = this.nextMark;\n      const aligned = this.getAligned(x, y);\n      aligned.flat().forEach(({\n        x,\n        y\n      }) => this.board[y][x] = this.nextMark === Mark.X ? Mark.X_USED : Mark.O_USED);\n      aligned.forEach(line => this.addScoreToCurrent(line.length));\n      if (this.pointsLimit > 0) {\n        if (this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] >= this.pointsLimit) {\n          this.gameOver = true;\n          this.won = this.nextMark === Mark.O ? 1 : 2;\n        }\n      } else {\n        if (this.board.flat().some(mark => mark === Mark.None)) {\n          this.gameOver = true;\n          this.won = 0;\n        }\n      }\n      this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n    };\n    this.pointsLimit = 0;\n    this.score = {\n      [Mark.X]: 0,\n      [Mark.O]: 0\n    };\n    this.addScoreToCurrent = lineLength => this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] += lineLength - 4;\n    this.getAligned = (x, y) => {\n      const mark = this.board[y][x];\n      if (mark === Mark.None) return [];\n      return [{\n        x: 1,\n        y: 1\n      }, {\n        x: 0,\n        y: 1\n      }, {\n        x: -1,\n        y: 1\n      }, {\n        x: -1,\n        y: 0\n      }].filter(direction => this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark).reduce((acc, direction) => {\n        const aligned = [];\n        let i = 1;\n        while (true) {\n          const next = {\n            x: x + direction.x * i,\n            y: y + direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        i = 1;\n        while (true) {\n          const next = {\n            x: x - direction.x * i,\n            y: y - direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        if (aligned.length > 3) {\n          aligned.push({\n            x,\n            y\n          });\n          acc.push(aligned);\n        }\n        return acc;\n      }, []);\n    };\n  }\n  ngOnInit() {\n    this.x = parseInt(this.x, 10);\n    this.y = parseInt(this.y, 10);\n    if (!this.x || !this.y || this.x < 1 || this.y < 1 || this.x < 5 && this.y < 5) {\n      this.x = 5;\n      this.y = 5;\n    }\n    if (!this.pointsLimit || this.pointsLimit < 0) this.pointsLimit = 0;\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))));\n  }\n};\n__decorate([Input('x')], GameComponent.prototype, \"x\", void 0);\n__decorate([Input('y')], GameComponent.prototype, \"y\", void 0);\n__decorate([Input('points')], GameComponent.prototype, \"pointsLimit\", void 0);\nGameComponent = __decorate([Component({\n  selector: 'app-game',\n  template: `\n    <app-game-bar [score]=\"score\" (restartChange)=\"restart()\"></app-game-bar>\n\n    <div id=\"main\">\n      <app-game-board [board]=\"board\" (setMarkEvent)=\"setMark($event.x, $event.y)\"></app-game-board>\n      <div class=\"overlay\" *ngIf=\"gameOver\">\n        {{ [\"draw\", \"you won\", \"you lost\" }}\n      </div>\n    </div>\n  `,\n  styles: [`\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 100%;\n        height: 100%;\n\n        box-sizing: border-box;\n      }\n\n      :host #main {\n        position: relative;\n\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n      }\n\n      :host #main app-game-board {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n      }\n\n      :host #main .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n\n        z-index: 1;\n      }\n    `]\n})], GameComponent);\nexport { GameComponent };","map":{"version":3,"mappings":"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","names":["Component","Input","Mark","GameComponent","constructor","gameOver","won","x","y","board","restart","location","reload","nextMark","O","setMark","None","aligned","getAligned","flat","forEach","X","X_USED","O_USED","line","addScoreToCurrent","length","pointsLimit","score","some","mark","lineLength","filter","direction","reduce","acc","i","next","push","ngOnInit","parseInt","JSON","parse","stringify","Array","fill","__decorate","selector","template","styles"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/game.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Mark } from '../types';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <app-game-bar [score]=\"score\" (restartChange)=\"restart()\"></app-game-bar>\n\n    <div id=\"main\">\n      <app-game-board [board]=\"board\" (setMarkEvent)=\"setMark($event.x, $event.y)\"></app-game-board>\n      <div class=\"overlay\" *ngIf=\"gameOver\">\n        {{ [\"draw\", \"you won\", \"you lost\" }}\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 100%;\n        height: 100%;\n\n        box-sizing: border-box;\n      }\n\n      :host #main {\n        position: relative;\n\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n      }\n\n      :host #main app-game-board {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n      }\n\n      :host #main .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n\n        z-index: 1;\n      }\n    `,\n  ],\n})\nexport class GameComponent {\n  protected gameOver: boolean = false;\n  protected won: 0 | 1 | 2 = 0;\n\n  @Input('x') x: number = 5;\n  @Input('y') y: number = 5;\n\n  protected board: Array<Array<Mark>> = []\n\n  ngOnInit() {\n    this.x = parseInt(this.x as any, 10);\n    this.y = parseInt(this.y as any, 10);\n\n    if (\n      !this.x || !this.y\n      || this.x < 1 || this.y < 1\n      || this.x < 5 && this.y < 5\n    ) {\n      this.x = 5;\n      this.y = 5;\n    }\n\n    if (!this.pointsLimit || this.pointsLimit < 0) this.pointsLimit = 0;\n\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))))\n  }\n\n  protected restart = () => location.reload();\n\n  private nextMark: Mark = Mark.O;\n  protected setMark = (x: number, y: number) => {\n    if (this.board[y][x] !== Mark.None) return;\n\n    this.board[y][x] = this.nextMark;\n\n    const aligned = this.getAligned(x, y);\n    aligned.flat().forEach(({ x, y }) => this.board[y][x] = this.nextMark === Mark.X ? Mark.X_USED : Mark.O_USED);\n    aligned.forEach(line => this.addScoreToCurrent(line.length));\n\n    if (this.pointsLimit > 0) {\n      if (this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] >= this.pointsLimit) {\n        this.gameOver = true;\n        this.won = this.nextMark === Mark.O? 1: 2;\n      }\n    } else {\n      if (this.board.flat().some(mark => mark === Mark.None)) {\n        this.gameOver = true;\n        this.won = 0;\n      }\n    }\n\n    this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n  }\n\n  @Input('points') pointsLimit: number = 0;\n\n  protected score = { [Mark.X]: 0, [Mark.O]: 0 };\n  private addScoreToCurrent = (lineLength: number) =>\n    this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] += lineLength - 4;\n\n  private getAligned = (x: number, y: number): { x: number, y: number }[][] => {\n    const mark = this.board[y][x];\n\n    if (mark === Mark.None) return [];\n\n    return [\n      { x: 1, y: 1 },\n      { x: 0, y: 1 },\n      { x: -1, y: 1 },\n      { x: -1, y: 0 },\n    ].filter(direction =>\n      this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark\n      || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark\n    )\n    .reduce((acc: { x: number, y: number }[][], direction) => {\n      const aligned = []\n\n      let i = 1\n\n      while (true) {\n        const next = {\n          x: x + direction.x * i,\n          y: y + direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      i = 1\n\n      while (true) {\n        const next = {\n          x: x - direction.x * i,\n          y: y - direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      if (aligned.length > 3) {\n        aligned.push({ x, y })\n        acc.push(aligned)\n      }\n\n      return acc\n    }, [])\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}