{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Mark } from '../types';\nimport * as i0 from \"@angular/core\";\nexport class GameBarComponent {\n  constructor() {\n    this.score = {\n      [Mark.X]: 0,\n      [Mark.O]: 0\n    };\n    this.restartChange = new EventEmitter();\n    this.restart = () => this.restartChange.emit();\n  }\n}\nGameBarComponent.ɵfac = function GameBarComponent_Factory(t) {\n  return new (t || GameBarComponent)();\n};\nGameBarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameBarComponent,\n  selectors: [[\"app-game-bar\"]],\n  inputs: {\n    score: \"score\"\n  },\n  outputs: {\n    restartChange: \"restartChange\"\n  },\n  decls: 11,\n  vars: 2,\n  consts: [[\"id\", \"score\"], [\"id\", \"x\"], [\"src\", \"/assets/x.png\"], [\"id\", \"o\"], [\"src\", \"/assets/o.png\"], [\"id\", \"restart\", 3, \"click\"]],\n  template: function GameBarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2);\n      i0.ɵɵelementStart(3, \"span\");\n      i0.ɵɵtext(4);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"div\", 3);\n      i0.ɵɵelement(6, \"img\", 4);\n      i0.ɵɵelementStart(7, \"span\");\n      i0.ɵɵtext(8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function GameBarComponent_Template_button_click_9_listener() {\n        return ctx.restart();\n      });\n      i0.ɵɵtext(10, \"restart\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.score[ctx.Mark.X]);\n      i0.ɵɵadvance(4);\n      i0.ɵɵtextInterpolate(ctx.score[ctx.Mark.O]);\n    }\n  }\n});","map":{"version":3,"mappings":"AAAA,SAAoBA,YAAY,QAAuB,eAAe;AACtE,SAASC,IAAI,QAAQ,UAAU;;AAwB/B,OAAM,MAAOC,gBAAgB;EAtB7BC,YAAA;IAuBW,KAAAC,KAAK,GAAG;MAAE,CAACH,IAAI,CAACI,CAAC,GAAG,CAAC;MAAE,CAACJ,IAAI,CAACK,CAAC,GAAG;IAAC,CAAE;IAEnC,KAAAC,aAAa,GAAG,IAAIP,YAAY,EAAQ;IAClD,KAAAQ,OAAO,GAAG,MAAM,IAAI,CAACD,aAAa,CAACE,IAAI,EAAE;;;AAJ9BP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAAQ,SAAA;EAAAC,MAAA;IAAAP,KAAA;EAAA;EAAAQ,OAAA;IAAAL,aAAA;EAAA;EAAAM,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAnBzBE,EAAA,CAAAC,cAAA,aAAgB;MAEZD,EAAA,CAAAE,SAAA,aAA2B;MAC3BF,EAAA,CAAAC,cAAA,WAAM;MAAAD,EAAA,CAAAG,MAAA,GAAmB;MAAAH,EAAA,CAAAI,YAAA,EAAO;MAElCJ,EAAA,CAAAC,cAAA,aAAY;MACVD,EAAA,CAAAE,SAAA,aAA2B;MAC3BF,EAAA,CAAAC,cAAA,WAAM;MAAAD,EAAA,CAAAG,MAAA,GAAmB;MAAAH,EAAA,CAAAI,YAAA,EAAO;MAIpCJ,EAAA,CAAAC,cAAA,gBAAyC;MAApBD,EAAA,CAAAK,UAAA,mBAAAC,kDAAA;QAAA,OAASP,GAAA,CAAAX,OAAA,EAAS;MAAA,EAAC;MAACY,EAAA,CAAAG,MAAA,eAAO;MAAAH,EAAA,CAAAI,YAAA,EAAS;;;MAR/CJ,EAAA,CAAAO,SAAA,GAAmB;MAAnBP,EAAA,CAAAQ,iBAAA,CAAAT,GAAA,CAAAf,KAAA,CAAAe,GAAA,CAAAlB,IAAA,CAAAI,CAAA,EAAmB;MAInBe,EAAA,CAAAO,SAAA,GAAmB;MAAnBP,EAAA,CAAAQ,iBAAA,CAAAT,GAAA,CAAAf,KAAA,CAAAe,GAAA,CAAAlB,IAAA,CAAAK,CAAA,EAAmB","names":["EventEmitter","Mark","GameBarComponent","constructor","score","X","O","restartChange","restart","emit","selectors","inputs","outputs","decls","vars","consts","template","GameBarComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵlistener","GameBarComponent_Template_button_click_9_listener","ɵɵadvance","ɵɵtextInterpolate"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/bar.component.ts"],"sourcesContent":["import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Mark } from '../types';\n\n@Component({\n  selector: 'app-game-bar',\n  template: `\n    <div id=\"score\">\n      <div id=\"x\">\n        <img src=\"/assets/x.png\" />\n        <span>{{ score[Mark.X] }}</span>\n      </div>\n      <div id=\"o\">\n        <img src=\"/assets/o.png\" />\n        <span>{{ score[Mark.O] }}</span>\n      </div>\n    </div>\n\n    <button id=\"restart\" (click)=\"restart()\">restart</button>\n  `,\n  styles: [\n    `\n\n    `,\n  ],\n})\nexport class GameBarComponent {\n  @Input() score = { [Mark.X]: 0, [Mark.O]: 0 };\n\n  @Output() restartChange = new EventEmitter<void>();\n  restart = () => this.restartChange.emit();\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}