{"ast":null,"code":"import { Opponent } from '../opponentai';\nimport { Mark } from '../types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./bar.component\";\nimport * as i3 from \"./board.component\";\nconst _c0 = function () {\n  return [\"draw\", \"you won\", \"you lost\"];\n};\nfunction GameComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpureFunction0(1, _c0)[ctx_r0.won], \" \");\n  }\n}\nexport class GameComponent {\n  constructor() {\n    this.gameOver = false;\n    this.won = 0;\n    this.x = 5;\n    this.y = 5;\n    this.board = [];\n    this.ai = new Opponent(this.x);\n    this.nextMark = Mark.O;\n    this.makeMove = (x, y) => {\n      this.setMark(x, y);\n      if (this.gameOver) return;\n      const move = this.ai.makeMove(this.board, {\n        x,\n        y\n      });\n      this.setMark(move.x, move.y);\n    };\n    this.setMark = (x, y) => {\n      if (this.board[y][x] !== Mark.None) return;\n      this.board[y][x] = this.nextMark;\n      const aligned = this.getAligned(x, y);\n      aligned.flat().forEach(({\n        x,\n        y\n      }) => this.board[y][x] = this.nextMark === Mark.X ? Mark.X_USED : Mark.O_USED);\n      aligned.forEach(line => this.addScoreToCurrent(line.length));\n      if (this.pointsLimit > 0) {\n        if (this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] >= this.pointsLimit) {\n          this.gameOver = true;\n          this.won = this.nextMark === Mark.O ? 1 : 2;\n        }\n      } else {\n        if (!this.board.flat().some(mark => mark === Mark.None)) {\n          this.gameOver = true;\n          this.won = this.score[Mark.X] === this.score[Mark.O] ? 0 : this.score[Mark.X] > this.score[Mark.O] ? 2 : 1;\n        }\n      }\n      this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n    };\n    this.pointsLimit = 0;\n    this.score = {\n      [Mark.X]: 0,\n      [Mark.O]: 0\n    };\n    this.addScoreToCurrent = lineLength => this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] += lineLength - 4;\n    this.getAligned = (x, y) => {\n      const mark = this.board[y][x];\n      if (mark === Mark.None) return [];\n      return [{\n        x: 1,\n        y: 1\n      }, {\n        x: 0,\n        y: 1\n      }, {\n        x: -1,\n        y: 1\n      }, {\n        x: -1,\n        y: 0\n      }].filter(direction => this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark).reduce((acc, direction) => {\n        const aligned = [];\n        let i = 1;\n        while (true) {\n          const next = {\n            x: x + direction.x * i,\n            y: y + direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        i = 1;\n        while (true) {\n          const next = {\n            x: x - direction.x * i,\n            y: y - direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        if (aligned.length > 3) {\n          aligned.push({\n            x,\n            y\n          });\n          acc.push(aligned);\n        }\n        return acc;\n      }, []);\n    };\n  }\n  ngOnInit() {\n    this.x = parseInt(this.x, 10);\n    this.y = parseInt(this.y, 10);\n    if (!this.x || !this.y || this.x < 1 || this.y < 1 || this.x < 5 && this.y < 5) {\n      this.x = 5;\n      this.y = 5;\n    }\n    if (!this.pointsLimit || this.pointsLimit < 0) this.pointsLimit = 0;\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))));\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  inputs: {\n    x: \"x\",\n    y: \"y\",\n    pointsLimit: [\"points\", \"pointsLimit\"]\n  },\n  decls: 4,\n  vars: 3,\n  consts: [[3, \"score\"], [\"id\", \"main\"], [3, \"board\", \"setMarkEvent\"], [\"class\", \"overlay\", 4, \"ngIf\"], [1, \"overlay\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-game-bar\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"app-game-board\", 2);\n      i0.ɵɵlistener(\"setMarkEvent\", function GameComponent_Template_app_game_board_setMarkEvent_2_listener($event) {\n        return ctx.makeMove($event.x, $event.y);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, GameComponent_div_3_Template, 2, 2, \"div\", 3);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"score\", ctx.score);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"board\", ctx.board);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.gameOver);\n    }\n  },\n  dependencies: [i1.NgIf, i2.GameBarComponent, i3.GameBoardComponent],\n  styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n\\n[_nghost-%COMP%]   #main[_ngcontent-%COMP%] {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n\\n[_nghost-%COMP%]   #main[_ngcontent-%COMP%]   app-game-board[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n}\\n\\n[_nghost-%COMP%]   #main[_ngcontent-%COMP%]   .overlay[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: 50px;\\n  color: #D8DEE9;\\n  z-index: 1;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDTTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBRUEsV0FBQTtFQUNBLFlBQUE7RUFFQSxzQkFBQTtBQUZSOztBQUtNO0VBQ0Usa0JBQUE7RUFFQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLHNCQUFBO0FBSFI7O0FBTU07RUFDRSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBRUEsV0FBQTtBQUpSOztBQU9NO0VBQ0Usa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUVBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esb0NBQUE7RUFFQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBRUEsZUFBQTtFQUNBLGNBQUE7RUFFQSxVQUFBO0FBUlIiLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAgIDpob3N0IHtcbiAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiAxMDAlO1xuXG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB9XG5cbiAgICAgIDpob3N0ICNtYWluIHtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICB9XG5cbiAgICAgIDpob3N0ICNtYWluIGFwcC1nYW1lLWJvYXJkIHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG5cbiAgICAgIDpob3N0ICNtYWluIC5vdmVybGF5IHtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIGxlZnQ6IDA7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjUpO1xuXG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuXG4gICAgICAgIGZvbnQtc2l6ZTogNTBweDtcbiAgICAgICAgY29sb3I6ICNEOERFRTk7XG5cbiAgICAgICAgei1pbmRleDogMTtcbiAgICAgIH1cbiAgICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["Opponent","Mark","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpureFunction0","_c0","ctx_r0","won","GameComponent","constructor","gameOver","x","y","board","ai","nextMark","O","makeMove","setMark","move","None","aligned","getAligned","flat","forEach","X","X_USED","O_USED","line","addScoreToCurrent","length","pointsLimit","score","some","mark","lineLength","filter","direction","reduce","acc","i","next","push","ngOnInit","parseInt","JSON","parse","stringify","Array","fill","selectors","inputs","decls","vars","consts","template","GameComponent_Template","rf","ctx","ɵɵelement","ɵɵlistener","GameComponent_Template_app_game_board_setMarkEvent_2_listener","$event","ɵɵtemplate","GameComponent_div_3_Template","ɵɵproperty"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/game.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Opponent } from '../opponentai';\nimport { Mark } from '../types';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <app-game-bar [score]=\"score\"></app-game-bar>\n\n    <div id=\"main\">\n      <app-game-board [board]=\"board\" (setMarkEvent)=\"makeMove($event.x, $event.y)\"></app-game-board>\n      <div class=\"overlay\" *ngIf=\"gameOver\">\n        {{ [\"draw\", \"you won\", \"you lost\"][won] }}\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 100%;\n        height: 100%;\n\n        box-sizing: border-box;\n      }\n\n      :host #main {\n        position: relative;\n\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n      }\n\n      :host #main app-game-board {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n      }\n\n      :host #main .overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, 0.5);\n\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n\n        font-size: 50px;\n        color: #D8DEE9;\n\n        z-index: 1;\n      }\n    `,\n  ],\n})\nexport class GameComponent {\n  protected gameOver: boolean = false;\n  protected won: 0 | 1 | 2 = 0;\n\n  @Input('x') x: number = 5;\n  @Input('y') y: number = 5;\n\n  protected board: Array<Array<Mark>> = []\n\n  private ai: Opponent = new Opponent(this.x);\n\n  ngOnInit() {\n    this.x = parseInt(this.x as any, 10);\n    this.y = parseInt(this.y as any, 10);\n\n    if (\n      !this.x || !this.y\n      || this.x < 1 || this.y < 1\n      || this.x < 5 && this.y < 5\n    ) {\n      this.x = 5;\n      this.y = 5;\n    }\n\n    if (!this.pointsLimit || this.pointsLimit < 0) this.pointsLimit = 0;\n\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))))\n  }\n\n  private nextMark: Mark = Mark.O;\n  public makeMove = (x: number, y: number) => {\n    this.setMark(x, y);\n\n    if (this.gameOver) return;\n\n    const move = this.ai.makeMove(this.board, { x, y });\n    this.setMark(move.x, move.y);\n  }\n  protected setMark = (x: number, y: number) => {\n    if (this.board[y][x] !== Mark.None) return;\n\n    this.board[y][x] = this.nextMark;\n\n    const aligned = this.getAligned(x, y);\n    aligned.flat().forEach(({ x, y }) => this.board[y][x] = this.nextMark === Mark.X ? Mark.X_USED : Mark.O_USED);\n    aligned.forEach(line => this.addScoreToCurrent(line.length));\n\n    if (this.pointsLimit > 0) {\n      if (this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] >= this.pointsLimit) {\n        this.gameOver = true;\n        this.won = this.nextMark === Mark.O? 1: 2;\n      }\n    } else {\n      if (!this.board.flat().some(mark => mark === Mark.None)) {\n        this.gameOver = true;\n        this.won = this.score[Mark.X] === this.score[Mark.O] ? 0 : this.score[Mark.X] > this.score[Mark.O] ? 2 : 1;\n      }\n    }\n\n    this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n  }\n\n  @Input('points') pointsLimit: number = 0;\n\n  protected score = { [Mark.X]: 0, [Mark.O]: 0 };\n  private addScoreToCurrent = (lineLength: number) =>\n    this.score[this.nextMark === Mark.X ? Mark.X : Mark.O] += lineLength - 4;\n\n  private getAligned = (x: number, y: number): { x: number, y: number }[][] => {\n    const mark = this.board[y][x];\n\n    if (mark === Mark.None) return [];\n\n    return [\n      { x: 1, y: 1 },\n      { x: 0, y: 1 },\n      { x: -1, y: 1 },\n      { x: -1, y: 0 },\n    ].filter(direction =>\n      this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark\n      || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark\n    )\n    .reduce((acc: { x: number, y: number }[][], direction) => {\n      const aligned = []\n\n      let i = 1\n\n      while (true) {\n        const next = {\n          x: x + direction.x * i,\n          y: y + direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      i = 1\n\n      while (true) {\n        const next = {\n          x: x - direction.x * i,\n          y: y - direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      if (aligned.length > 3) {\n        aligned.push({ x, y })\n        acc.push(aligned)\n      }\n\n      return acc\n    }, [])\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}