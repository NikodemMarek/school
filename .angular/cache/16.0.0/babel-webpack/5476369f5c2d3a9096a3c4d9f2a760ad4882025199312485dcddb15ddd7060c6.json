{"ast":null,"code":"import { Mark } from '../types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./bar.component\";\nimport * as i2 from \"./board.component\";\nconst _c0 = function (a0, a1) {\n  return {\n    x: a0,\n    y: a1\n  };\n};\nexport class GameComponent {\n  constructor() {\n    this.x = 5;\n    this.y = 5;\n    this.restart = () => location.reload();\n    this.score = {\n      [Mark.X]: 0,\n      [Mark.O]: 0\n    };\n    this.board = [];\n    this.newBoard = (x, y) => JSON.parse(JSON.stringify(Array(y).fill(Array(x).fill(Mark.None))));\n  }\n  ngOnInit() {\n    this.x = parseInt(this.x, 10);\n    this.y = parseInt(this.y, 10);\n    if (!this.x || !this.y || this.x < 1 || this.y < 1 || this.x < 5 && this.y < 5) {\n      this.x = 5;\n      this.y = 5;\n    }\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  inputs: {\n    x: \"x\",\n    y: \"y\"\n  },\n  decls: 2,\n  vars: 5,\n  consts: [[3, \"score\", \"restartChange\"], [3, \"size\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-game-bar\", 0);\n      i0.ɵɵlistener(\"restartChange\", function GameComponent_Template_app_game_bar_restartChange_0_listener() {\n        return ctx.restart();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(1, \"app-game-board\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"score\", ctx.score);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"size\", i0.ɵɵpureFunction2(2, _c0, ctx.x, ctx.y));\n    }\n  },\n  dependencies: [i1.GameBarComponent, i2.GameBoardComponent],\n  styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDTTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBRUEsV0FBQTtFQUNBLFlBQUE7RUFFQSxzQkFBQTtBQUZSIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgfVxuICAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AAEA,SAASA,IAAI,QAAQ,UAAU;;;;;;;;;;AAwB/B,OAAM,MAAOC,aAAa;EAtB1BC,YAAA;IAuBc,KAAAC,CAAC,GAAW,CAAC;IACb,KAAAC,CAAC,GAAW,CAAC;IAgBzB,KAAAC,OAAO,GAAG,MAAMC,QAAQ,CAACC,MAAM,EAAE;IAEvB,KAAAC,KAAK,GAAG;MAAE,CAACR,IAAI,CAACS,CAAC,GAAG,CAAC;MAAE,CAACT,IAAI,CAACU,CAAC,GAAG;IAAC,CAAE;IAEpC,KAAAC,KAAK,GAAuB,EAAE;IACxC,KAAAC,QAAQ,GAAG,CAACT,CAAS,EAAEC,CAAS,KAAKS,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACC,KAAK,CAACZ,CAAC,CAAC,CAACa,IAAI,CAACD,KAAK,CAACb,CAAC,CAAC,CAACc,IAAI,CAACjB,IAAI,CAACkB,IAAI,CAAC,CAAC,CAAC,CAAC;;EAnBxGC,QAAQA,CAAA;IACN,IAAI,CAAChB,CAAC,GAAGiB,QAAQ,CAAC,IAAI,CAACjB,CAAQ,EAAE,EAAE,CAAC;IACpC,IAAI,CAACC,CAAC,GAAGgB,QAAQ,CAAC,IAAI,CAAChB,CAAQ,EAAE,EAAE,CAAC;IAEpC,IACE,CAAC,IAAI,CAACD,CAAC,IAAI,CAAC,IAAI,CAACC,CAAC,IACf,IAAI,CAACD,CAAC,GAAG,CAAC,IAAI,IAAI,CAACC,CAAC,GAAG,CAAC,IACxB,IAAI,CAACD,CAAC,GAAG,CAAC,IAAI,IAAI,CAACC,CAAC,GAAG,CAAC,EAC3B;MACA,IAAI,CAACD,CAAC,GAAG,CAAC;MACV,IAAI,CAACC,CAAC,GAAG,CAAC;;EAEd;;AAhBWH,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB,SAAA;EAAAC,MAAA;IAAAnB,CAAA;IAAAC,CAAA;EAAA;EAAAmB,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MAnBtBE,EAAA,CAAAC,cAAA,sBAA0D;MAA5BD,EAAA,CAAAE,UAAA,2BAAAC,6DAAA;QAAA,OAAiBJ,GAAA,CAAAxB,OAAA,EAAS;MAAA,EAAC;MAACyB,EAAA,CAAAI,YAAA,EAAe;MAEzEJ,EAAA,CAAAK,SAAA,wBAAmD;;;MAFrCL,EAAA,CAAAM,UAAA,UAAAP,GAAA,CAAArB,KAAA,CAAe;MAEbsB,EAAA,CAAAO,SAAA,GAAiB;MAAjBP,EAAA,CAAAM,UAAA,SAAAN,EAAA,CAAAQ,eAAA,IAAAC,GAAA,EAAAV,GAAA,CAAA1B,CAAA,EAAA0B,GAAA,CAAAzB,CAAA,EAAiB","names":["Mark","GameComponent","constructor","x","y","restart","location","reload","score","X","O","board","newBoard","JSON","parse","stringify","Array","fill","None","ngOnInit","parseInt","selectors","inputs","decls","vars","consts","template","GameComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","GameComponent_Template_app_game_bar_restartChange_0_listener","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵpureFunction2","_c0"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/game.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Mark } from '../types';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <app-game-bar [score]=\"score\" (restartChange)=\"restart()\"></app-game-bar>\n\n    <app-game-board [size]=\"{ x, y }\"></app-game-board>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 100%;\n        height: 100%;\n\n        box-sizing: border-box;\n      }\n    `,\n  ],\n})\nexport class GameComponent {\n  @Input('x') x: number = 5;\n  @Input('y') y: number = 5;\n\n  ngOnInit() {\n    this.x = parseInt(this.x as any, 10);\n    this.y = parseInt(this.y as any, 10);\n\n    if (\n      !this.x || !this.y\n      || this.x < 1 || this.y < 1\n      || this.x < 5 && this.y < 5\n    ) {\n      this.x = 5;\n      this.y = 5;\n    }\n  }\n\n  restart = () => location.reload();\n\n  protected score = { [Mark.X]: 0, [Mark.O]: 0 };\n\n  protected board: Array<Array<Mark>> = []\n  newBoard = (x: number, y: number) => JSON.parse(JSON.stringify(Array(y).fill(Array(x).fill(Mark.None))))\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}