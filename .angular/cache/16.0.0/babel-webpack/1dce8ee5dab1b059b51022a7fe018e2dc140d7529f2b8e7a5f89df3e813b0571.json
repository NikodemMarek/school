{"ast":null,"code":"import { Mark } from '../types';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./bar.component\";\nimport * as i2 from \"./board.component\";\nexport class GameComponent {\n  constructor() {\n    this.x = 5;\n    this.y = 5;\n    this.board = [];\n    this.restart = () => location.reload();\n    this.nextMark = Mark.O;\n    this.setMark = (x, y) => {\n      if (this.board[y][x] !== Mark.None) return;\n      this.board[y][x] = this.nextMark;\n      const aligned = this.getAligned(x, y);\n      console.log(aligned);\n      this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n    };\n    this.score = {\n      [Mark.X]: 0,\n      [Mark.O]: 0\n    };\n    this.getAligned = (x, y) => {\n      const mark = this.board[y][x];\n      if (mark === Mark.None) return [];\n      const directions = [{\n        x: 1,\n        y: 1\n      }, {\n        x: 0,\n        y: 1\n      }, {\n        x: -1,\n        y: 1\n      }, {\n        x: -1,\n        y: 0\n      }].filter(direction => this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark).reduce((acc, direction) => {\n        let i = 2;\n        const aligned = [];\n        while (true) {\n          const next = {\n            x: x + direction.x * i,\n            y: y + direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        while (true) {\n          const next = {\n            x: x - direction.x * i,\n            y: y - direction.y * i\n          };\n          if (this.board[next.y]?.[next.x] !== mark) break;\n          aligned.push(next);\n          i++;\n        }\n        acc.push(aligned);\n        return acc;\n      }, []);\n      return directions;\n    };\n  }\n  ngOnInit() {\n    this.x = parseInt(this.x, 10);\n    this.y = parseInt(this.y, 10);\n    if (!this.x || !this.y || this.x < 1 || this.y < 1 || this.x < 5 && this.y < 5) {\n      this.x = 5;\n      this.y = 5;\n    }\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))));\n  }\n}\nGameComponent.ɵfac = function GameComponent_Factory(t) {\n  return new (t || GameComponent)();\n};\nGameComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: GameComponent,\n  selectors: [[\"app-game\"]],\n  inputs: {\n    x: \"x\",\n    y: \"y\"\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[3, \"score\", \"restartChange\"], [3, \"board\", \"setMarkEvent\"]],\n  template: function GameComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-game-bar\", 0);\n      i0.ɵɵlistener(\"restartChange\", function GameComponent_Template_app_game_bar_restartChange_0_listener() {\n        return ctx.restart();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"app-game-board\", 1);\n      i0.ɵɵlistener(\"setMarkEvent\", function GameComponent_Template_app_game_board_setMarkEvent_1_listener($event) {\n        return ctx.setMark($event.x, $event.y);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"score\", ctx.score);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"board\", ctx.board);\n    }\n  },\n  dependencies: [i1.GameBarComponent, i2.GameBoardComponent],\n  styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n  box-sizing: border-box;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZ2FtZS9nYW1lLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDTTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLG1CQUFBO0VBRUEsV0FBQTtFQUNBLFlBQUE7RUFFQSxzQkFBQTtBQUZSIiwic291cmNlc0NvbnRlbnQiOlsiXG4gICAgICA6aG9zdCB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG5cbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMTAwJTtcblxuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgfVxuICAgICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Mark","GameComponent","constructor","x","y","board","restart","location","reload","nextMark","O","setMark","None","aligned","getAligned","console","log","X","score","mark","directions","filter","direction","reduce","acc","i","next","push","ngOnInit","parseInt","JSON","parse","stringify","Array","fill","selectors","inputs","decls","vars","consts","template","GameComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","GameComponent_Template_app_game_bar_restartChange_0_listener","ɵɵelementEnd","GameComponent_Template_app_game_board_setMarkEvent_1_listener","$event","ɵɵproperty","ɵɵadvance"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/game/game.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { Mark } from '../types';\n\n@Component({\n  selector: 'app-game',\n  template: `\n    <app-game-bar [score]=\"score\" (restartChange)=\"restart()\"></app-game-bar>\n\n    <app-game-board [board]=\"board\" (setMarkEvent)=\"setMark($event.x, $event.y)\"></app-game-board>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        width: 100%;\n        height: 100%;\n\n        box-sizing: border-box;\n      }\n    `,\n  ],\n})\nexport class GameComponent {\n  @Input('x') x: number = 5;\n  @Input('y') y: number = 5;\n\n  protected board: Array<Array<Mark>> = []\n\n  ngOnInit() {\n    this.x = parseInt(this.x as any, 10);\n    this.y = parseInt(this.y as any, 10);\n\n    if (\n      !this.x || !this.y\n      || this.x < 1 || this.y < 1\n      || this.x < 5 && this.y < 5\n    ) {\n      this.x = 5;\n      this.y = 5;\n    }\n\n    this.board = JSON.parse(JSON.stringify(Array(this.y).fill(Array(this.x).fill(Mark.None))))\n  }\n\n  protected restart = () => location.reload();\n\n  private nextMark: Mark = Mark.O;\n  protected setMark = (x: number, y: number) => {\n    if (this.board[y][x] !== Mark.None) return;\n\n    this.board[y][x] = this.nextMark;\n\n    const aligned = this.getAligned(x, y);\n    console.log(aligned);\n\n    this.nextMark = this.nextMark === Mark.X ? Mark.O : Mark.X;\n\n  }\n\n  protected score = { [Mark.X]: 0, [Mark.O]: 0 };\n\n  private getAligned = (x: number, y: number) => {\n    const mark = this.board[y][x];\n\n    if (mark === Mark.None) return [];\n\n    const directions = [\n      { x: 1, y: 1 },\n      { x: 0, y: 1 },\n      { x: -1, y: 1 },\n      { x: -1, y: 0 },\n    ].filter(direction =>\n      this.board[y + direction.y] && this.board[y + direction.y][x + direction.x] === mark\n      || this.board[y - direction.y] && this.board[y - direction.y][x - direction.x] === mark\n    )\n    .reduce((acc, direction) => {\n      let i = 2\n\n      const aligned = []\n      while (true) {\n        const next = {\n          x: x + direction.x * i,\n          y: y + direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      while (true) {\n        const next = {\n          x: x - direction.x * i,\n          y: y - direction.y * i,\n        }\n        if (this.board[next.y]?.[next.x] !== mark) break;\n\n        aligned.push(next)\n\n        i ++\n      }\n\n      acc.push(aligned)\n      return acc\n    }, [])\n\n    return directions;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}