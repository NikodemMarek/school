{"ast":null,"code":"import { Mark } from \"./types\";\nexport class Opponent {\n  constructor(size) {\n    this.size = size;\n    this.nextAttack = null;\n    this.makeMove = (board, lastMove) => {\n      const moves = this.getMoves(board);\n      const move = this.shouldIBeAlamed(board, lastMove);\n      if (move && moves.includes(move)) return move;\n      if (this.nextAttack) {}\n      const randomMove = moves[Math.floor(Math.random() * moves.length)];\n      this.nextAttack = {\n        x: randomMove.x,\n        y: randomMove.y\n      };\n      return randomMove;\n    };\n    this.getMoves = board => {\n      const moves = [];\n      for (let y = 0; y < board.length; y++) {\n        const row = board[y];\n        for (let x = 0; x < row.length; x++) {\n          if (board[y][x] === Mark.None) moves.push({\n            x,\n            y\n          });\n        }\n      }\n      return moves;\n    };\n    this.whereIsMyMarkAround = (board, x, y) => {\n      const possibilities = [{\n        x: 1,\n        y: 1\n      }, {\n        x: 0,\n        y: 1\n      }, {\n        x: -1,\n        y: 1\n      }, {\n        x: -1,\n        y: 0\n      }, {\n        x: -1,\n        y: -1\n      }, {\n        x: 0,\n        y: -1\n      }, {\n        x: 1,\n        y: -1\n      }, {\n        x: 1,\n        y: 0\n      }];\n      for (const possibility of possibilities) {\n        const newX = x + possibility.x;\n        const newY = y + possibility.y;\n        if (board[newY][newX] === Mark.X) return {\n          x: newX,\n          y: newY\n        };\n      }\n    };\n    this.shouldIBeAlamed = (board, lastMove) => {\n      const {\n        x,\n        y\n      } = lastMove;\n      const danger = [[{\n        x: 1,\n        y: 1\n      }, {\n        x: 2,\n        y: 2\n      }], [{\n        x: 0,\n        y: 1\n      }, {\n        x: 0,\n        y: 2\n      }], [{\n        x: -1,\n        y: 1\n      }, {\n        x: -2,\n        y: 2\n      }], [{\n        x: -1,\n        y: 0\n      }, {\n        x: -2,\n        y: 0\n      }], [{\n        x: -1,\n        y: -1\n      }, {\n        x: -2,\n        y: -2\n      }], [{\n        x: 0,\n        y: -1\n      }, {\n        x: 0,\n        y: -2\n      }], [{\n        x: 1,\n        y: -1\n      }, {\n        x: 2,\n        y: -2\n      }], [{\n        x: 1,\n        y: 0\n      }, {\n        x: 2,\n        y: 0\n      }]];\n      for (const direction of danger) {\n        if (board[y + direction[0].y]?.[x + direction[0].x] === Mark.X && board[y + direction[1].y]?.[x + direction[1].x] === Mark.X) {\n          if (board[y + direction[0].y]?.[x + direction[0].x] === Mark.None) {\n            return {\n              x: x + direction[0].x,\n              y: y + direction[0].y\n            };\n          } else if (board[y + direction[1].y * 3]?.[x + direction[1].x * 3] === Mark.None) {\n            return {\n              x: x - direction[1].x * 3,\n              y: y - direction[1].y * 3\n            };\n          }\n        }\n      }\n      return null;\n    };\n  }\n}","map":{"version":3,"mappings":"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","names":["Mark","Opponent","constructor","size","nextAttack","makeMove","board","lastMove","moves","getMoves","move","shouldIBeAlamed","includes","randomMove","Math","floor","random","length","x","y","row","None","push","whereIsMyMarkAround","possibilities","possibility","newX","newY","X","danger","direction"],"sourceRoot":"","sources":["/home/nikodem/projects/school/src/app/opponentai.ts"],"sourcesContent":["import { Mark } from \"./types\";\n\nexport class Opponent {\n  private nextAttack: { x: number, y: number } | null = null;\n\n  constructor(private size: { x: number, y: number }) {}\n\n  makeMove = (board: Mark[][], lastMove: { x: number, y: number }): { x: number, y: number } => {\n    const moves = this.getMoves(board);\n\n    const move = this.shouldIBeAlamed(board, lastMove);\n    if (move && moves.includes(move))\n      return move;\n\n    if (this.nextAttack) {\n\n    }\n\n    const randomMove = moves[Math.floor(Math.random() * moves.length)];\n    this.nextAttack =\n      {\n      x: randomMove.x,\n      y: randomMove.y,\n    }\n\n    return randomMove;\n  }\n\n  private getMoves = (board: Mark[][]): { x: number, y: number }[] => {\n    const moves: { x: number, y: number }[] = [];\n\n    for (let y = 0; y < board.length; y++) {\n      const row = board[y];\n      for (let x = 0; x < row.length; x++) {\n        if (board[y][x] === Mark.None) moves.push({ x, y });\n      }\n    }\n\n    return moves;\n  }\n\n  private whereIsMyMarkAround = (board: Mark[][], x: number, y: number): { x: number, y: number } | null => {\n    const possibilities = [\n      { x: 1, y: 1 },\n      { x: 0, y: 1 },\n      { x: -1, y: 1 },\n      { x: -1, y: 0 },\n      { x: -1, y: -1 },\n      { x: 0, y: -1 },\n      { x: 1, y: -1 },\n      { x: 1, y: 0 },\n    ];\n\n    for (const possibility of possibilities) {\n      const newX = x + possibility.x;\n      const newY = y + possibility.y;\n\n      if (board[newY][newX] === Mark.X) return { x: newX, y: newY };\n    }\n  }\n\n  private shouldIBeAlamed = (board: Mark[][], lastMove: { x: number, y: number }): { x: number, y: number } | null => {\n    const { x, y } = lastMove;\n\n    const danger = [\n      [\n        { x: 1, y: 1 },\n        { x: 2, y: 2 },\n      ],\n      [\n        { x: 0, y: 1 },\n        { x: 0, y: 2 },\n      ],\n      [\n        { x: -1, y: 1 },\n        { x: -2, y: 2 },\n      ],\n      [\n        { x: -1, y: 0 },\n        { x: -2, y: 0 },\n      ],\n      [\n        { x: -1, y: -1 },\n        { x: -2, y: -2 },\n      ],\n      [\n        { x: 0, y: -1 },\n        { x: 0, y: -2 },\n      ],\n      [\n        { x: 1, y: -1 },\n        { x: 2, y: -2 },\n      ],\n      [\n        { x: 1, y: 0 },\n        { x: 2, y: 0 },\n      ],\n    ];\n\n    for (const direction of danger) {\n      if (\n        board[y + direction[0].y]?.[x + direction[0].x] === Mark.X\n        && board[y + direction[1].y]?.[x + direction[1].x] === Mark.X\n      ) {\n        if (board[y + direction[0].y]?.[x + direction[0].x] === Mark.None) {\n          return {\n            x: x + direction[0].x,\n            y: y + direction[0].y,\n          };\n        } else if (board[y + direction[1].y * 3]?.[x + direction[1].x * 3] === Mark.None) {\n          return {\n            x: x - direction[1].x * 3,\n            y: y - direction[1].y * 3,\n          };\n        }\n      }\n    }\n\n    return null\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}